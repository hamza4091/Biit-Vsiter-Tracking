
@{
    ViewData["Title"] = "AddPath";
}
<html>
<body>

    <style>
        .divider:after,
        .divider:before {
            content: "";
            flex: 1;
            height: 1px;
            background: #eee;
        }

        .h-custom {
            height: calc(100% - 73px);
        }

        .main1 {
            padding: 20px;
            width: 550px;
            height: 450px;
            float: left;
            margin-left: 10px;
        }



        .dashboard {
            width: 300px;
            height: 550px;
            margin-top: 10px;
            float: left;
        }


        body {
            margin: 0;
            font-family: "Lato", sans-serif;
        }

        .sidebar {
            margin: 0;
            padding: 0;
            width: 240px;
            background-color: #f1f1f1;
            position: fixed;
            height: 100%;
            overflow: auto;
        }

            .sidebar a {
                display: block;
                color: black;
                padding: 16px;
                text-decoration: none;
            }

                .sidebar a.active {
                    background-color: #04AA6D;
                    color: white;
                }

                .sidebar a:hover:not(.active) {
                    background-color: #555;
                    color: white;
                }

        div.content {
            margin-left: 200px;
            padding: 1px 16px;
            height: 1000px;
        }
        }
    </style>


    <div class=" dashboard">
        <div class="sidebar">
            <a href="/Home/AdminHomePage">DashBoard</a>
            <a href="/Home/Privacy">Report Generation</a>
            <a href="/Home/Alerts">Alert</a>
            <a href="/Home/AddPerson">Add Person</a>
            <a href="/Home/AddGuard">Add Guard</a>
            <a href="/Home/AddPath" class="active">Add Path</a>
            <a href="/Home/AddDestination">Add Destination</a>
            <a href="/Home/AddCamera">Add Camera</a>
            <a href="#about">LogOut</a>
        </div>

    </div>
    <div class=" main1">


        <h1>ADD PATH</h1>
        <div id="container" style="border:2px">
            <button onclick="submit()">Submit</button>

</body>
</html>
<script>
    var cameras = []
    async function generateRandomFields() {
        await fetch('http://127.0.0.1:1234/getcamera')
            .then(res => {
                return res.json();
            }).then(data => {
                data.map((value, index) => {
                    cameras.push(value.camera)
                })

            });
        @*    var cameras = ["cam1", "cam2", "cam3", "cam4", "cam5"];*@
        var count = cameras.length;
        var container = document.getElementById("container");

        // create table element
        var table = document.createElement("table");

        //create first row for column names
        var firstRow = document.createElement("tr");
        var srnoCell = document.createElement("td");
        srnoCell.innerHTML = "___";
        firstRow.appendChild(srnoCell);
        for (var i = 0; i < count; i++) {
            var firstRowCell = document.createElement("td");
            firstRowCell.innerHTML = cameras[i];
            firstRow.appendChild(firstRowCell);
        }
        table.appendChild(firstRow);
        for (var i = 0; i < count; i++) {
            // create row element
            var row = document.createElement("tr");
            var srnoRowCell = document.createElement("td");
            srnoRowCell.innerHTML = cameras[i];
            row.appendChild(srnoRowCell);
            for (var j = 0; j < count; j++) {
                // create cell element
                var cell = document.createElement("td");
                // create input element
                var input = document.createElement("input");
                input.type = "text";
                input.id = i + "" + j;
                input.style.width = "100px";
                // append input element to cell element
                cell.appendChild(input);
                // append cell element to row element
                row.appendChild(cell);
            }
            // append row element to table element
            table.appendChild(row);

            container.appendChild(table);
            container.style.overflow = "auto";

            container.style.height = "300px";
            container.style.width = "500px";
        }
    }

    // append table element to container
    generateRandomFields()
    async function submit() {
        var value = makeArrayOfPaths()
       const response = await fetch("http://127.0.0.1:1234/addpath", {
           method: 'POST',
           headers: {
               'Accept': 'application/json',
               'Content-Type': 'application/json'
           },

           body: JSON.stringify({
               path: value

           })
       });

       response.json().then(data => {
           console.log(data);
           alert(JSON.stringify(data))
       });
    }
    function makeArrayOfPaths() {
        var paths = [] 
        for (var i = 0; i < cameras.length; i++) {
            for (var j = 0; j < cameras.length; j++) {
                debugger;
                paths.push({ [cameras[i] + "TO" + cameras[j]]: document.getElementById(i + "" + j).value });
            }
        }
        console.log(paths)
        return JSON.stringify(paths)
    }
</script>































